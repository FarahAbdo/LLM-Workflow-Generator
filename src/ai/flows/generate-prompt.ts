// This file was generated by Firebase Studio.
'use server';

/**
 * @fileOverview This file defines a Genkit flow that generates an initial prompt based on a user-provided description of their desired LLM application.
 *
 * The flow takes an application description as input and returns a generated prompt.
 *
 * - generatePrompt - A function that generates a prompt from a description.
 * - GeneratePromptInput - The input type for the generatePrompt function.
 * - GeneratePromptOutput - The return type for the generatePrompt function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const GeneratePromptInputSchema = z.object({
  applicationDescription: z.string().describe('A description of the desired LLM application.'),
});
export type GeneratePromptInput = z.infer<typeof GeneratePromptInputSchema>;

const GeneratePromptOutputSchema = z.object({
  prompt: z.string().describe('The generated prompt for the LLM application.'),
});
export type GeneratePromptOutput = z.infer<typeof GeneratePromptOutputSchema>;

export async function generatePrompt(input: GeneratePromptInput): Promise<GeneratePromptOutput> {
  return generatePromptFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generatePromptFromDescriptionPrompt',
  input: {
    schema: z.object({
      applicationDescription: z.string().describe('A description of the desired LLM application.'),
    }),
  },
  output: {
    schema: z.object({
      prompt: z.string().describe('The generated prompt for the LLM application.'),
    }),
  },
  prompt: `You are an AI expert in generating prompts for LLMs.

  Based on the following application description, generate an initial prompt that can be used to start building the application.

  Application Description: {{{applicationDescription}}}

  Generated Prompt: `,
});

const generatePromptFlow = ai.defineFlow<
  typeof GeneratePromptInputSchema,
  typeof GeneratePromptOutputSchema
>(
  {
    name: 'generatePromptFlow',
    inputSchema: GeneratePromptInputSchema,
    outputSchema: GeneratePromptOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
